# Generated by Django 5.2 on 2025-09-03 11:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("analytics", "0001_initial"),
        ("settings_app", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="alert",
            name="store",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="alerts",
                to="settings_app.store",
                verbose_name="Store",
            ),
        ),
        migrations.AddField(
            model_name="alertinstance",
            name="acknowledged_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="acknowledged_alerts",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Acknowledged By",
            ),
        ),
        migrations.AddField(
            model_name="alertinstance",
            name="alert",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="instances",
                to="analytics.alert",
                verbose_name="Alert",
            ),
        ),
        migrations.AddField(
            model_name="comparativeanalysis",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comparative_analyses",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="dashboard",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owned_dashboards",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Dashboard Owner",
            ),
        ),
        migrations.AddField(
            model_name="historicalalert",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalalert",
            name="store",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="settings_app.store",
                verbose_name="Store",
            ),
        ),
        migrations.AddField(
            model_name="historicalcomparativeanalysis",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="historicalcomparativeanalysis",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicaldashboard",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicaldashboard",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Dashboard Owner",
            ),
        ),
        migrations.AddField(
            model_name="historicalkpimetric",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicaltrendanalysis",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicaltrendanalysis",
            name="store",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="settings_app.store",
                verbose_name="Store",
            ),
        ),
        migrations.AddField(
            model_name="historicaltrendanalysis",
            name="metric",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="analytics.kpimetric",
                verbose_name="KPI Metric",
            ),
        ),
        migrations.AddField(
            model_name="historicalalert",
            name="metric",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="analytics.kpimetric",
                verbose_name="KPI Metric",
            ),
        ),
        migrations.AddField(
            model_name="comparativeanalysis",
            name="metrics",
            field=models.ManyToManyField(
                related_name="comparative_analyses",
                to="analytics.kpimetric",
                verbose_name="Metrics to Compare",
            ),
        ),
        migrations.AddField(
            model_name="alert",
            name="metric",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="alerts",
                to="analytics.kpimetric",
                verbose_name="KPI Metric",
            ),
        ),
        migrations.AddField(
            model_name="metricsnapshot",
            name="metric",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="snapshots",
                to="analytics.kpimetric",
                verbose_name="KPI Metric",
            ),
        ),
        migrations.AddField(
            model_name="metricsnapshot",
            name="store",
            field=models.ForeignKey(
                blank=True,
                help_text="Store this metric applies to (null for company-wide)",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="metric_snapshots",
                to="settings_app.store",
                verbose_name="Store",
            ),
        ),
        migrations.AddField(
            model_name="trendanalysis",
            name="metric",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="trend_analyses",
                to="analytics.kpimetric",
                verbose_name="KPI Metric",
            ),
        ),
        migrations.AddField(
            model_name="trendanalysis",
            name="store",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="trend_analyses",
                to="settings_app.store",
                verbose_name="Store",
            ),
        ),
        migrations.AddIndex(
            model_name="dashboard",
            index=models.Index(
                fields=["dashboard_type", "is_public"], name="dashboard_type_public_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboard",
            index=models.Index(
                fields=["owner", "dashboard_type"], name="dashboard_owner_type_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="metricsnapshot",
            index=models.Index(
                fields=["metric", "snapshot_date"], name="metric_snapshot_date_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="metricsnapshot",
            index=models.Index(
                fields=["store", "snapshot_date"], name="store_snapshot_date_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="metricsnapshot",
            index=models.Index(
                fields=["period_start", "period_end"], name="snapshot_period_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trendanalysis",
            index=models.Index(
                fields=["metric", "analysis_date"], name="trend_metric_date_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trendanalysis",
            index=models.Index(
                fields=["store", "analysis_date"], name="trend_store_date_idx"
            ),
        ),
    ]
