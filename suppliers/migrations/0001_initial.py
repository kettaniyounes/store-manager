# Generated by Django 5.2 on 2025-08-29 07:29

import django.db.models.deletion
import simple_history.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_number', models.CharField(db_index=True, editable=False, help_text='Unique Purchase Order number (auto-generated).', max_length=50, unique=True, verbose_name='PO Number')),
                ('po_date', models.DateTimeField(auto_now_add=True, help_text='Date the purchase order was created.', verbose_name='PO Date')),
                ('expected_delivery_date', models.DateField(blank=True, help_text='Expected date of delivery from the supplier.', null=True, verbose_name='Expected Delivery Date')),
                ('shipping_address', models.TextField(blank=True, help_text='Address to which the order should be shipped.', verbose_name='Shipping Address')),
                ('billing_address', models.TextField(blank=True, help_text='Billing address for the purchase order.', verbose_name='Billing Address')),
                ('payment_terms', models.CharField(blank=True, help_text='Payment terms for this specific purchase order (may override supplier defaults).', max_length=255, verbose_name='Payment Terms')),
                ('currency', models.CharField(blank=True, help_text='Currency for this purchase order (may override supplier default).', max_length=3, verbose_name='Currency')),
                ('total_value', models.DecimalField(decimal_places=2, help_text='Total amount of the purchase Order (calculated)', max_digits=10, verbose_name='Total Amount')),
                ('total_paid_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), editable=False, help_text='Total amount paid to the supplier for this Purchase Order (calculated automatically).', max_digits=10, verbose_name='Total Paid Amount')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('sent', 'Sent to Supplier'), ('confirmed', 'Confirmed by Supplier'), ('partially_shipped', 'Partially Shipped'), ('shipped', 'Shipped'), ('partially_received', 'Partially Received'), ('received', 'Received'), ('invoiced', 'Invoiced'), ('paid', 'Paid'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='draft', help_text='Current status of the purchase order.', max_length=50, verbose_name='Status')),
                ('notes', models.TextField(blank=True, help_text='Additional notes or comments about this purchase order.', verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Purchase Order',
                'verbose_name_plural': 'Purchase Orders',
                'ordering': ['-po_date'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The official name of the supplier company or individual.', max_length=255, unique=True, verbose_name='Supplier Name')),
                ('contact_name', models.CharField(blank=True, help_text='Name of the primary contact person at the supplier.', max_length=255, verbose_name='Contact Person Name')),
                ('contact_phone', models.CharField(blank=True, help_text='Phone number for contacting the supplier.', max_length=20, verbose_name='Contact Phone')),
                ('contact_email', models.EmailField(blank=True, help_text='Email address for contacting the supplier.', max_length=254, verbose_name='Contact Email')),
                ('address', models.TextField(blank=True, help_text='Physical address of the supplier.', verbose_name='Address')),
                ('website', models.URLField(blank=True, help_text="Supplier's website URL.", max_length=255, verbose_name='Website')),
                ('description', models.TextField(blank=True, help_text='Internal notes or description about the supplier.', verbose_name='Description/Notes')),
                ('payment_terms', models.CharField(blank=True, help_text='Payment terms offered by the supplier (e.g., Net 30, Net 60).', max_length=255, verbose_name='Payment Terms')),
                ('currency', models.CharField(blank=True, help_text='Currency in which transactions are typically conducted with this supplier.', max_length=3, verbose_name='Currency')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the supplier is currently active and being used.', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalSupplier',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='The official name of the supplier company or individual.', max_length=255, verbose_name='Supplier Name')),
                ('contact_name', models.CharField(blank=True, help_text='Name of the primary contact person at the supplier.', max_length=255, verbose_name='Contact Person Name')),
                ('contact_phone', models.CharField(blank=True, help_text='Phone number for contacting the supplier.', max_length=20, verbose_name='Contact Phone')),
                ('contact_email', models.EmailField(blank=True, help_text='Email address for contacting the supplier.', max_length=254, verbose_name='Contact Email')),
                ('address', models.TextField(blank=True, help_text='Physical address of the supplier.', verbose_name='Address')),
                ('website', models.URLField(blank=True, help_text="Supplier's website URL.", max_length=255, verbose_name='Website')),
                ('description', models.TextField(blank=True, help_text='Internal notes or description about the supplier.', verbose_name='Description/Notes')),
                ('payment_terms', models.CharField(blank=True, help_text='Payment terms offered by the supplier (e.g., Net 30, Net 60).', max_length=255, verbose_name='Payment Terms')),
                ('currency', models.CharField(blank=True, help_text='Currency in which transactions are typically conducted with this supplier.', max_length=3, verbose_name='Currency')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the supplier is currently active and being used.', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Supplier',
                'verbose_name_plural': 'historical Suppliers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSupplierPayment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('payment_date', models.DateTimeField(blank=True, editable=False, help_text='Date and time when the payment was recorded.', verbose_name='Payment Date')),
                ('amount_paid', models.DecimalField(decimal_places=2, help_text='Amount paid in this transaction.', max_digits=10, verbose_name='Amount Paid')),
                ('payment_method', models.CharField(blank=True, help_text='Method of payment (e.g., Cash, Bank Transfer, Check).', max_length=255, verbose_name='Payment Method')),
                ('transaction_reference', models.CharField(blank=True, help_text='Optional transaction reference number or ID.', max_length=255, verbose_name='Transaction Reference')),
                ('notes', models.TextField(blank=True, help_text='Optional notes about this payment.', verbose_name='Payment Notes')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('purchase_order', models.ForeignKey(blank=True, db_constraint=False, help_text='The Purchase Order this payment is for.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='suppliers.purchaseorder', verbose_name='Purchase Order')),
            ],
            options={
                'verbose_name': 'historical Supplier Payment',
                'verbose_name_plural': 'historical Supplier Payments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='supplier',
            field=models.ForeignKey(help_text='Supplier for this purchase order.', on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='suppliers.supplier', verbose_name='Supplier'),
        ),
        migrations.CreateModel(
            name='HistoricalSupplierProduct',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('supplier_sku', models.CharField(help_text='The product code or SKU as used by the supplier.', max_length=255, verbose_name='Supplier SKU/Product Code')),
                ('supplier_price', models.DecimalField(decimal_places=2, help_text='Current price offered by the supplier for this product.', max_digits=10, verbose_name='Supplier Price')),
                ('lead_time_days', models.IntegerField(default=0, help_text='Estimated lead time in days for the supplier to deliver this product.', verbose_name='Lead Time (Days)')),
                ('minimum_order_quantity', models.IntegerField(default=1, help_text='Minimum quantity required when ordering this product from the supplier.', verbose_name='Minimum Order Quantity')),
                ('currency', models.CharField(blank=True, help_text='Currency for the supplier price (if different from default supplier currency).', max_length=3, verbose_name='Currency')),
                ('last_price_updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Last Price Updated')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, db_constraint=False, help_text='The main product catalog entry this supplier product corresponds to.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='products.product', verbose_name='Product')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, help_text='The supplier offering this product.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='suppliers.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'historical Supplier Product',
                'verbose_name_plural': 'historical Supplier Products',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPurchaseOrder',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('po_number', models.CharField(db_index=True, editable=False, help_text='Unique Purchase Order number (auto-generated).', max_length=50, verbose_name='PO Number')),
                ('po_date', models.DateTimeField(blank=True, editable=False, help_text='Date the purchase order was created.', verbose_name='PO Date')),
                ('expected_delivery_date', models.DateField(blank=True, help_text='Expected date of delivery from the supplier.', null=True, verbose_name='Expected Delivery Date')),
                ('shipping_address', models.TextField(blank=True, help_text='Address to which the order should be shipped.', verbose_name='Shipping Address')),
                ('billing_address', models.TextField(blank=True, help_text='Billing address for the purchase order.', verbose_name='Billing Address')),
                ('payment_terms', models.CharField(blank=True, help_text='Payment terms for this specific purchase order (may override supplier defaults).', max_length=255, verbose_name='Payment Terms')),
                ('currency', models.CharField(blank=True, help_text='Currency for this purchase order (may override supplier default).', max_length=3, verbose_name='Currency')),
                ('total_value', models.DecimalField(decimal_places=2, help_text='Total amount of the purchase Order (calculated)', max_digits=10, verbose_name='Total Amount')),
                ('total_paid_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), editable=False, help_text='Total amount paid to the supplier for this Purchase Order (calculated automatically).', max_digits=10, verbose_name='Total Paid Amount')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('sent', 'Sent to Supplier'), ('confirmed', 'Confirmed by Supplier'), ('partially_shipped', 'Partially Shipped'), ('shipped', 'Shipped'), ('partially_received', 'Partially Received'), ('received', 'Received'), ('invoiced', 'Invoiced'), ('paid', 'Paid'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='draft', help_text='Current status of the purchase order.', max_length=50, verbose_name='Status')),
                ('notes', models.TextField(blank=True, help_text='Additional notes or comments about this purchase order.', verbose_name='Notes')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, help_text='Supplier for this purchase order.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='suppliers.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'historical Purchase Order',
                'verbose_name_plural': 'historical Purchase Orders',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SupplierPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateTimeField(auto_now_add=True, help_text='Date and time when the payment was recorded.', verbose_name='Payment Date')),
                ('amount_paid', models.DecimalField(decimal_places=2, help_text='Amount paid in this transaction.', max_digits=10, verbose_name='Amount Paid')),
                ('payment_method', models.CharField(blank=True, help_text='Method of payment (e.g., Cash, Bank Transfer, Check).', max_length=255, verbose_name='Payment Method')),
                ('transaction_reference', models.CharField(blank=True, help_text='Optional transaction reference number or ID.', max_length=255, verbose_name='Transaction Reference')),
                ('notes', models.TextField(blank=True, help_text='Optional notes about this payment.', verbose_name='Payment Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('purchase_order', models.ForeignKey(help_text='The Purchase Order this payment is for.', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='suppliers.purchaseorder', verbose_name='Purchase Order')),
            ],
            options={
                'verbose_name': 'Supplier Payment',
                'verbose_name_plural': 'Supplier Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='SupplierProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_sku', models.CharField(help_text='The product code or SKU as used by the supplier.', max_length=255, verbose_name='Supplier SKU/Product Code')),
                ('supplier_price', models.DecimalField(decimal_places=2, help_text='Current price offered by the supplier for this product.', max_digits=10, verbose_name='Supplier Price')),
                ('lead_time_days', models.IntegerField(default=0, help_text='Estimated lead time in days for the supplier to deliver this product.', verbose_name='Lead Time (Days)')),
                ('minimum_order_quantity', models.IntegerField(default=1, help_text='Minimum quantity required when ordering this product from the supplier.', verbose_name='Minimum Order Quantity')),
                ('currency', models.CharField(blank=True, help_text='Currency for the supplier price (if different from default supplier currency).', max_length=3, verbose_name='Currency')),
                ('last_price_updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Price Updated')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(help_text='The main product catalog entry this supplier product corresponds to.', on_delete=django.db.models.deletion.CASCADE, related_name='supplier_products', to='products.product', verbose_name='Product')),
                ('supplier', models.ForeignKey(help_text='The supplier offering this product.', on_delete=django.db.models.deletion.CASCADE, related_name='supplier_products', to='suppliers.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'Supplier Product',
                'verbose_name_plural': 'Supplier Products',
                'unique_together': {('supplier', 'product')},
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.IntegerField(help_text='Quantity of the product ordered.', verbose_name='Quantity Ordered')),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Unit price for this item at the time of order.', max_digits=10, verbose_name='Unit Price')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Discount applied to this item (if any).', max_digits=10, verbose_name='Discount Amount')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tax amount for this item (if applicable).', max_digits=10, verbose_name='Tax Amount')),
                ('line_total', models.DecimalField(decimal_places=2, editable=False, help_text='Calculated total for this line item (quantity * unit price - discount + tax).', max_digits=10, verbose_name='Line Total')),
                ('quantity_received', models.IntegerField(default=0, help_text='Quantity of the product actually received from the supplier.', verbose_name='Quantity Received')),
                ('notes', models.TextField(blank=True, help_text='Notes specific to this purchase order item.', verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(help_text='The product being ordered.', on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Product')),
                ('purchase_order', models.ForeignKey(help_text='The purchase order this item belongs to.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='po_items', to='suppliers.purchaseorder', verbose_name='Purchase Order')),
                ('supplier_product', models.ForeignKey(blank=True, help_text='Optional link to the Supplier Product catalog entry for this item.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='suppliers.supplierproduct', verbose_name='Supplier Product (Optional)')),
            ],
            options={
                'verbose_name': 'Purchase Order Item',
                'verbose_name_plural': 'Purchase Order Items',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPurchaseOrderItem',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('quantity_ordered', models.IntegerField(help_text='Quantity of the product ordered.', verbose_name='Quantity Ordered')),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Unit price for this item at the time of order.', max_digits=10, verbose_name='Unit Price')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Discount applied to this item (if any).', max_digits=10, verbose_name='Discount Amount')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tax amount for this item (if applicable).', max_digits=10, verbose_name='Tax Amount')),
                ('line_total', models.DecimalField(decimal_places=2, editable=False, help_text='Calculated total for this line item (quantity * unit price - discount + tax).', max_digits=10, verbose_name='Line Total')),
                ('quantity_received', models.IntegerField(default=0, help_text='Quantity of the product actually received from the supplier.', verbose_name='Quantity Received')),
                ('notes', models.TextField(blank=True, help_text='Notes specific to this purchase order item.', verbose_name='Notes')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, db_constraint=False, help_text='The product being ordered.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='products.product', verbose_name='Product')),
                ('purchase_order', models.ForeignKey(blank=True, db_constraint=False, help_text='The purchase order this item belongs to.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='suppliers.purchaseorder', verbose_name='Purchase Order')),
                ('supplier_product', models.ForeignKey(blank=True, db_constraint=False, help_text='Optional link to the Supplier Product catalog entry for this item.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='suppliers.supplierproduct', verbose_name='Supplier Product (Optional)')),
            ],
            options={
                'verbose_name': 'historical Purchase Order Item',
                'verbose_name_plural': 'historical Purchase Order Items',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
