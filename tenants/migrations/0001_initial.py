# Generated by Django 5.2 on 2025-09-04 13:05

import django.core.validators
import django.db.models.deletion
import django_tenants.postgresql_backend.base
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tenant",
            fields=[
                (
                    "schema_name",
                    models.CharField(
                        db_index=True,
                        max_length=63,
                        unique=True,
                        validators=[
                            django_tenants.postgresql_backend.base._check_schema_name
                        ],
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Business/Company name", max_length=100),
                ),
                (
                    "slug",
                    models.SlugField(help_text="URL-friendly identifier", unique=True),
                ),
                (
                    "business_type",
                    models.CharField(
                        choices=[
                            ("retail", "Retail Store"),
                            ("restaurant", "Restaurant"),
                            ("pharmacy", "Pharmacy"),
                            ("grocery", "Grocery Store"),
                            ("electronics", "Electronics Store"),
                            ("clothing", "Clothing Store"),
                            ("other", "Other"),
                        ],
                        default="retail",
                        max_length=50,
                    ),
                ),
                ("contact_email", models.EmailField(max_length=254)),
                (
                    "contact_phone",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?1?\\d{9,15}$", "Enter a valid phone number."
                            )
                        ],
                    ),
                ),
                ("address_line1", models.CharField(max_length=255)),
                ("address_line2", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(default="United States", max_length=100)),
                (
                    "subscription_plan",
                    models.CharField(
                        choices=[
                            ("trial", "Trial"),
                            ("basic", "Basic"),
                            ("premium", "Premium"),
                            ("enterprise", "Enterprise"),
                        ],
                        default="trial",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("trial_end_date", models.DateTimeField(blank=True, null=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("currency", models.CharField(default="USD", max_length=3)),
            ],
            options={
                "db_table": "tenants_tenant",
            },
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "domain",
                    models.CharField(db_index=True, max_length=253, unique=True),
                ),
                ("is_primary", models.BooleanField(db_index=True, default=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="domains",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TenantInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Administrator"),
                            ("manager", "Manager"),
                            ("staff", "Staff"),
                            ("viewer", "Viewer"),
                        ],
                        default="staff",
                        max_length=50,
                    ),
                ),
                ("token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("is_accepted", models.BooleanField(default=False)),
                ("is_expired", models.BooleanField(default=False)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("expires_on", models.DateTimeField()),
                ("accepted_on", models.DateTimeField(blank=True, null=True)),
                (
                    "invited_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_invitations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitations",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "db_table": "tenant_invitations",
                "unique_together": {("tenant", "email")},
            },
        ),
        migrations.CreateModel(
            name="TenantUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "Owner"),
                            ("admin", "Administrator"),
                            ("manager", "Manager"),
                            ("staff", "Staff"),
                            ("viewer", "Viewer"),
                        ],
                        default="staff",
                        max_length=50,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("can_manage_users", models.BooleanField(default=False)),
                ("can_manage_settings", models.BooleanField(default=False)),
                ("can_view_analytics", models.BooleanField(default=True)),
                ("can_manage_inventory", models.BooleanField(default=False)),
                ("can_process_sales", models.BooleanField(default=True)),
                ("joined_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_memberships",
                        to="tenants.tenant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenant_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "tenant_users",
                "unique_together": {("user", "tenant")},
            },
        ),
    ]
