# Generated by Django 5.2 on 2025-09-04 13:05

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalUserProfile",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "Owner"),
                            ("manager", "Manager"),
                            ("staff", "Staff"),
                            ("inventory", "Inventory Staff"),
                            ("cashier", "Cashier"),
                            ("viewer", "Viewer"),
                        ],
                        default="staff",
                        help_text="User's role within this tenant",
                        max_length=50,
                        verbose_name="Role",
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        help_text="Department or team within the organization",
                        max_length=100,
                    ),
                ),
                (
                    "employee_id",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Employee ID or staff number",
                        max_length=50,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, help_text="Contact phone number", max_length=20
                    ),
                ),
                (
                    "can_access_pos",
                    models.BooleanField(
                        default=True, help_text="Can access Point of Sale system"
                    ),
                ),
                (
                    "can_view_reports",
                    models.BooleanField(
                        default=False,
                        help_text="Can view business reports and analytics",
                    ),
                ),
                (
                    "can_manage_products",
                    models.BooleanField(
                        default=False, help_text="Can add, edit, and delete products"
                    ),
                ),
                (
                    "can_manage_customers",
                    models.BooleanField(
                        default=False, help_text="Can manage customer information"
                    ),
                ),
                (
                    "can_process_returns",
                    models.BooleanField(
                        default=False, help_text="Can process returns and refunds"
                    ),
                ),
                (
                    "can_manage_discounts",
                    models.BooleanField(
                        default=False, help_text="Can apply and manage discounts"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="User is active within this tenant"
                    ),
                ),
                (
                    "last_login_tenant",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last login time for this tenant",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical User Profile",
                "verbose_name_plural": "historical User Profiles",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "Owner"),
                            ("manager", "Manager"),
                            ("staff", "Staff"),
                            ("inventory", "Inventory Staff"),
                            ("cashier", "Cashier"),
                            ("viewer", "Viewer"),
                        ],
                        default="staff",
                        help_text="User's role within this tenant",
                        max_length=50,
                        verbose_name="Role",
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        help_text="Department or team within the organization",
                        max_length=100,
                    ),
                ),
                (
                    "employee_id",
                    models.CharField(
                        blank=True,
                        help_text="Employee ID or staff number",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, help_text="Contact phone number", max_length=20
                    ),
                ),
                (
                    "can_access_pos",
                    models.BooleanField(
                        default=True, help_text="Can access Point of Sale system"
                    ),
                ),
                (
                    "can_view_reports",
                    models.BooleanField(
                        default=False,
                        help_text="Can view business reports and analytics",
                    ),
                ),
                (
                    "can_manage_products",
                    models.BooleanField(
                        default=False, help_text="Can add, edit, and delete products"
                    ),
                ),
                (
                    "can_manage_customers",
                    models.BooleanField(
                        default=False, help_text="Can manage customer information"
                    ),
                ),
                (
                    "can_process_returns",
                    models.BooleanField(
                        default=False, help_text="Can process returns and refunds"
                    ),
                ),
                (
                    "can_manage_discounts",
                    models.BooleanField(
                        default=False, help_text="Can apply and manage discounts"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="User is active within this tenant"
                    ),
                ),
                (
                    "last_login_tenant",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last login time for this tenant",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
            },
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(max_length=40, unique=True)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                ("login_time", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("logout_time", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenant_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Session",
                "verbose_name_plural": "User Sessions",
                "ordering": ["-login_time"],
            },
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("create", "Create"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                            ("view", "View"),
                            ("export", "Export"),
                            ("import", "Import"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "resource",
                    models.CharField(help_text="What was acted upon", max_length=100),
                ),
                ("resource_id", models.CharField(blank=True, max_length=100)),
                ("details", models.JSONField(blank=True, default=dict)),
                ("ip_address", models.GenericIPAddressField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenant_activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Activity",
                "verbose_name_plural": "User Activities",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="users_usera_user_id_bd4c6e_idx",
                    ),
                    models.Index(
                        fields=["action", "timestamp"],
                        name="users_usera_action_048900_idx",
                    ),
                ],
            },
        ),
    ]
