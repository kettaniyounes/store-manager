# Generated by Django 5.2 on 2025-09-01 09:52

import django.db.models.deletion
import simple_history.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalStore",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the store location",
                        max_length=255,
                        verbose_name="Store Name",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        help_text="Unique code for the store (e.g., MAIN, BR01, WH01)",
                        max_length=20,
                        verbose_name="Store Code",
                    ),
                ),
                (
                    "store_type",
                    models.CharField(
                        choices=[
                            ("main", "Main Store"),
                            ("branch", "Branch Store"),
                            ("warehouse", "Warehouse"),
                            ("online", "Online Store"),
                            ("kiosk", "Kiosk"),
                        ],
                        default="branch",
                        max_length=20,
                        verbose_name="Store Type",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        help_text="Physical address of the store",
                        verbose_name="Address",
                    ),
                ),
                ("city", models.CharField(max_length=100, verbose_name="City")),
                (
                    "state_province",
                    models.CharField(max_length=100, verbose_name="State/Province"),
                ),
                (
                    "postal_code",
                    models.CharField(max_length=20, verbose_name="Postal Code"),
                ),
                ("country", models.CharField(max_length=100, verbose_name="Country")),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Phone Number"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email Address"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indicates if the store is currently operational",
                        verbose_name="Is Active",
                    ),
                ),
                (
                    "is_main_store",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if this is the main/headquarters store",
                        verbose_name="Is Main Store",
                    ),
                ),
                (
                    "opening_hours",
                    models.JSONField(
                        default=dict,
                        help_text="Store opening hours in JSON format",
                        verbose_name="Opening Hours",
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC",
                        help_text="Store timezone (e.g., America/New_York)",
                        max_length=50,
                        verbose_name="Timezone",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="USD",
                        help_text="Default currency for this store",
                        max_length=3,
                        verbose_name="Currency",
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Default tax rate for this store",
                        max_digits=5,
                        verbose_name="Default Tax Rate (%)",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Store Manager",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Store",
                "verbose_name_plural": "historical Stores",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Store",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the store location",
                        max_length=255,
                        verbose_name="Store Name",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for the store (e.g., MAIN, BR01, WH01)",
                        max_length=20,
                        unique=True,
                        verbose_name="Store Code",
                    ),
                ),
                (
                    "store_type",
                    models.CharField(
                        choices=[
                            ("main", "Main Store"),
                            ("branch", "Branch Store"),
                            ("warehouse", "Warehouse"),
                            ("online", "Online Store"),
                            ("kiosk", "Kiosk"),
                        ],
                        default="branch",
                        max_length=20,
                        verbose_name="Store Type",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        help_text="Physical address of the store",
                        verbose_name="Address",
                    ),
                ),
                ("city", models.CharField(max_length=100, verbose_name="City")),
                (
                    "state_province",
                    models.CharField(max_length=100, verbose_name="State/Province"),
                ),
                (
                    "postal_code",
                    models.CharField(max_length=20, verbose_name="Postal Code"),
                ),
                ("country", models.CharField(max_length=100, verbose_name="Country")),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Phone Number"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email Address"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indicates if the store is currently operational",
                        verbose_name="Is Active",
                    ),
                ),
                (
                    "is_main_store",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if this is the main/headquarters store",
                        verbose_name="Is Main Store",
                    ),
                ),
                (
                    "opening_hours",
                    models.JSONField(
                        default=dict,
                        help_text="Store opening hours in JSON format",
                        verbose_name="Opening Hours",
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC",
                        help_text="Store timezone (e.g., America/New_York)",
                        max_length=50,
                        verbose_name="Timezone",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="USD",
                        help_text="Default currency for this store",
                        max_length=3,
                        verbose_name="Currency",
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Default tax rate for this store",
                        max_digits=5,
                        verbose_name="Default Tax Rate (%)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_stores",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Store Manager",
                    ),
                ),
            ],
            options={
                "verbose_name": "Store",
                "verbose_name_plural": "Stores",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalStoreTransfer",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "transfer_number",
                    models.CharField(
                        db_index=True,
                        help_text="Unique transfer identifier",
                        max_length=50,
                        verbose_name="Transfer Number",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_transit", "In Transit"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "request_date",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Request Date"
                    ),
                ),
                (
                    "shipped_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Shipped Date"
                    ),
                ),
                (
                    "received_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Received Date"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes about the transfer",
                        verbose_name="Notes",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Approved By",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "received_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Received By",
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Requested By",
                    ),
                ),
                (
                    "shipped_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Shipped By",
                    ),
                ),
                (
                    "from_store",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="settings_app.store",
                        verbose_name="From Store",
                    ),
                ),
                (
                    "to_store",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="settings_app.store",
                        verbose_name="To Store",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Store Transfer",
                "verbose_name_plural": "historical Store Transfers",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalStoreSetting",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        choices=[
                            ("store_name", "Store Name"),
                            ("default_currency", "Default Currency"),
                            ("tax_rate", "Default Tax Rate (%)"),
                            ("receipt_header", "Receipt Header Text"),
                            ("receipt_footer", "Receipt Footer Text"),
                            ("low_stock_alert", "Low Stock Alert Enabled"),
                            ("auto_reorder", "Auto Reorder Enabled"),
                            ("multi_store_mode", "Multi-Store Mode Enabled"),
                        ],
                        max_length=255,
                        verbose_name="Setting Key",
                    ),
                ),
                (
                    "value",
                    models.TextField(
                        help_text="Value of the setting. Data type depends on the setting key.",
                        verbose_name="Setting Value",
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("string", "String"),
                            ("integer", "Integer"),
                            ("boolean", "Boolean"),
                            ("decimal", "Decimal"),
                            ("json", "JSON"),
                        ],
                        default="string",
                        help_text="Data type of the setting value",
                        max_length=50,
                        verbose_name="Data Type",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of what this setting controls (optional)",
                        verbose_name="Description",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Store this setting applies to (null for global settings)",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="settings_app.store",
                        verbose_name="Store",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Store Setting",
                "verbose_name_plural": "historical Store Settings",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="StoreSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        choices=[
                            ("store_name", "Store Name"),
                            ("default_currency", "Default Currency"),
                            ("tax_rate", "Default Tax Rate (%)"),
                            ("receipt_header", "Receipt Header Text"),
                            ("receipt_footer", "Receipt Footer Text"),
                            ("low_stock_alert", "Low Stock Alert Enabled"),
                            ("auto_reorder", "Auto Reorder Enabled"),
                            ("multi_store_mode", "Multi-Store Mode Enabled"),
                        ],
                        max_length=255,
                        verbose_name="Setting Key",
                    ),
                ),
                (
                    "value",
                    models.TextField(
                        help_text="Value of the setting. Data type depends on the setting key.",
                        verbose_name="Setting Value",
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("string", "String"),
                            ("integer", "Integer"),
                            ("boolean", "Boolean"),
                            ("decimal", "Decimal"),
                            ("json", "JSON"),
                        ],
                        default="string",
                        help_text="Data type of the setting value",
                        max_length=50,
                        verbose_name="Data Type",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of what this setting controls (optional)",
                        verbose_name="Description",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "store",
                    models.ForeignKey(
                        blank=True,
                        help_text="Store this setting applies to (null for global settings)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="settings",
                        to="settings_app.store",
                        verbose_name="Store",
                    ),
                ),
            ],
            options={
                "verbose_name": "Store Setting",
                "verbose_name_plural": "Store Settings",
                "ordering": ["store", "key"],
            },
        ),
        migrations.CreateModel(
            name="StoreTransfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transfer_number",
                    models.CharField(
                        help_text="Unique transfer identifier",
                        max_length=50,
                        unique=True,
                        verbose_name="Transfer Number",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_transit", "In Transit"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "request_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Request Date"
                    ),
                ),
                (
                    "shipped_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Shipped Date"
                    ),
                ),
                (
                    "received_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Received Date"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes about the transfer",
                        verbose_name="Notes",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_transfers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Approved By",
                    ),
                ),
                (
                    "from_store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outgoing_transfers",
                        to="settings_app.store",
                        verbose_name="From Store",
                    ),
                ),
                (
                    "received_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="received_transfers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Received By",
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="requested_transfers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Requested By",
                    ),
                ),
                (
                    "shipped_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shipped_transfers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Shipped By",
                    ),
                ),
                (
                    "to_store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_transfers",
                        to="settings_app.store",
                        verbose_name="To Store",
                    ),
                ),
            ],
            options={
                "verbose_name": "Store Transfer",
                "verbose_name_plural": "Store Transfers",
                "ordering": ["-request_date"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalStoreTransferItem",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "quantity_requested",
                    models.IntegerField(
                        help_text="Quantity requested for transfer",
                        verbose_name="Quantity Requested",
                    ),
                ),
                (
                    "quantity_shipped",
                    models.IntegerField(
                        default=0,
                        help_text="Actual quantity shipped",
                        verbose_name="Quantity Shipped",
                    ),
                ),
                (
                    "quantity_received",
                    models.IntegerField(
                        default=0,
                        help_text="Actual quantity received",
                        verbose_name="Quantity Received",
                    ),
                ),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cost per unit for valuation",
                        max_digits=10,
                        verbose_name="Unit Cost",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Notes specific to this item",
                        verbose_name="Notes",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "product_variant",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="products.productvariant",
                        verbose_name="Product Variant",
                    ),
                ),
                (
                    "transfer",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="settings_app.storetransfer",
                        verbose_name="Transfer",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Store Transfer Item",
                "verbose_name_plural": "historical Store Transfer Items",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="StoreTransferItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity_requested",
                    models.IntegerField(
                        help_text="Quantity requested for transfer",
                        verbose_name="Quantity Requested",
                    ),
                ),
                (
                    "quantity_shipped",
                    models.IntegerField(
                        default=0,
                        help_text="Actual quantity shipped",
                        verbose_name="Quantity Shipped",
                    ),
                ),
                (
                    "quantity_received",
                    models.IntegerField(
                        default=0,
                        help_text="Actual quantity received",
                        verbose_name="Quantity Received",
                    ),
                ),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cost per unit for valuation",
                        max_digits=10,
                        verbose_name="Unit Cost",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Notes specific to this item",
                        verbose_name="Notes",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "product_variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.productvariant",
                        verbose_name="Product Variant",
                    ),
                ),
                (
                    "transfer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfer_items",
                        to="settings_app.storetransfer",
                        verbose_name="Transfer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Store Transfer Item",
                "verbose_name_plural": "Store Transfer Items",
            },
        ),
        migrations.AddIndex(
            model_name="store",
            index=models.Index(fields=["code"], name="store_code_idx"),
        ),
        migrations.AddIndex(
            model_name="store",
            index=models.Index(
                fields=["is_active", "store_type"], name="store_active_type_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="storesetting",
            unique_together={("store", "key")},
        ),
        migrations.AddIndex(
            model_name="storetransfer",
            index=models.Index(
                fields=["from_store", "status"], name="transfer_from_status_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="storetransfer",
            index=models.Index(
                fields=["to_store", "status"], name="transfer_to_status_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="storetransfer",
            index=models.Index(fields=["request_date"], name="transfer_date_idx"),
        ),
    ]
