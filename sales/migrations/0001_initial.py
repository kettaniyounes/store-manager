# Generated by Django 5.2 on 2025-08-31 13:28

import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("customers", "0001_initial"),
        ("products", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Payment Method Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description of the payment method",
                        verbose_name="Description",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indicates if this payment method is currently active",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Payment Method",
                "verbose_name_plural": "Payment Methods",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalPaymentMethod",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        max_length=255,
                        verbose_name="Payment Method Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description of the payment method",
                        verbose_name="Description",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indicates if this payment method is currently active",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Payment Method",
                "verbose_name_plural": "historical Payment Methods",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSaleTransaction",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text="Unique transaction identifier (e.g., receipt number)",
                        max_length=100,
                        verbose_name="Transaction ID",
                    ),
                ),
                (
                    "sale_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date and time of the sale transaction",
                        verbose_name="Sale Date & Time",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total amount of the sale transaction (calculated)",
                        max_digits=10,
                        verbose_name="Total Amount",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total discount applied to the transaction",
                        max_digits=10,
                        verbose_name="Discount Amount",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total tax amount for the transaction",
                        max_digits=10,
                        verbose_name="Tax Amount",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("completed", "Completed"), ("voided", "Voided")],
                        default="completed",
                        help_text="Indicates whether the sale is completed or voided",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Optional notes or comments for this transaction",
                        verbose_name="Notes",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Optional customer associated with this sale",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="customers.customer",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "salesperson",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Optional salesperson who processed this sale",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Salesperson",
                    ),
                ),
                (
                    "payment_method",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Payment method used for this transaction",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="sales.paymentmethod",
                        verbose_name="Payment Method",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Sale Transaction",
                "verbose_name_plural": "historical Sale Transactions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="SaleTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        default=uuid.uuid4,
                        help_text="Unique transaction identifier (e.g., receipt number)",
                        max_length=100,
                        unique=True,
                        verbose_name="Transaction ID",
                    ),
                ),
                (
                    "sale_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date and time of the sale transaction",
                        verbose_name="Sale Date & Time",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total amount of the sale transaction (calculated)",
                        max_digits=10,
                        verbose_name="Total Amount",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total discount applied to the transaction",
                        max_digits=10,
                        verbose_name="Discount Amount",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total tax amount for the transaction",
                        max_digits=10,
                        verbose_name="Tax Amount",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("completed", "Completed"), ("voided", "Voided")],
                        default="completed",
                        help_text="Indicates whether the sale is completed or voided",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Optional notes or comments for this transaction",
                        verbose_name="Notes",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional customer associated with this sale",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sale_transactions",
                        to="customers.customer",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "payment_method",
                    models.ForeignKey(
                        help_text="Payment method used for this transaction",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sale_transactions",
                        to="sales.paymentmethod",
                        verbose_name="Payment Method",
                    ),
                ),
                (
                    "salesperson",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional salesperson who processed this sale",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sale_transactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Salesperson",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sale Transaction",
                "verbose_name_plural": "Sale Transactions",
                "ordering": ["-sale_date"],
            },
        ),
        migrations.CreateModel(
            name="SaleItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        help_text="Quantity of the product sold",
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price per unit at the time of sale",
                        max_digits=10,
                        verbose_name="Unit Price",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Discount applied to this sale item",
                        max_digits=10,
                        verbose_name="Discount Amount",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Tax amount for this sale item",
                        max_digits=10,
                        verbose_name="Tax Amount",
                    ),
                ),
                (
                    "line_total",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total price for this sale item (calculated)",
                        max_digits=10,
                        verbose_name="Line Total",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sale_items",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "product_variant",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional product variant if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sale_items",
                        to="products.productvariant",
                        verbose_name="Product Variant",
                    ),
                ),
                (
                    "sale_transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sale_items",
                        to="sales.saletransaction",
                        verbose_name="Sale Transaction",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sale Item",
                "verbose_name_plural": "Sale Items",
            },
        ),
        migrations.CreateModel(
            name="HistoricalSaleItem",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        help_text="Quantity of the product sold",
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price per unit at the time of sale",
                        max_digits=10,
                        verbose_name="Unit Price",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Discount applied to this sale item",
                        max_digits=10,
                        verbose_name="Discount Amount",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Tax amount for this sale item",
                        max_digits=10,
                        verbose_name="Tax Amount",
                    ),
                ),
                (
                    "line_total",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total price for this sale item (calculated)",
                        max_digits=10,
                        verbose_name="Line Total",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "product_variant",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Optional product variant if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="products.productvariant",
                        verbose_name="Product Variant",
                    ),
                ),
                (
                    "sale_transaction",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="sales.saletransaction",
                        verbose_name="Sale Transaction",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Sale Item",
                "verbose_name_plural": "historical Sale Items",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
