# Generated by Django 5.2 on 2025-08-29 07:35

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('key', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('permissions', models.JSONField(default=list, help_text='List of allowed permissions')),
                ('rate_limit', models.IntegerField(default=1000, help_text='Requests per hour')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Key',
                'verbose_name_plural': 'API Keys',
                'db_table': 'api_keys',
            },
        ),
        migrations.CreateModel(
            name='BulkOperation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('operation_type', models.CharField(choices=[('import', 'Import'), ('export', 'Export'), ('update', 'Bulk Update'), ('delete', 'Bulk Delete')], max_length=20)),
                ('model_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_records', models.IntegerField(default=0)),
                ('processed_records', models.IntegerField(default=0)),
                ('successful_records', models.IntegerField(default=0)),
                ('failed_records', models.IntegerField(default=0)),
                ('input_file', models.FileField(blank=True, null=True, upload_to='bulk_operations/input/')),
                ('output_file', models.FileField(blank=True, null=True, upload_to='bulk_operations/output/')),
                ('error_file', models.FileField(blank=True, null=True, upload_to='bulk_operations/errors/')),
                ('configuration', models.JSONField(default=dict)),
                ('results', models.JSONField(default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bulk Operation',
                'verbose_name_plural': 'Bulk Operations',
                'db_table': 'bulk_operations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExternalIntegration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('service_type', models.CharField(choices=[('shopify', 'Shopify'), ('woocommerce', 'WooCommerce'), ('quickbooks', 'QuickBooks'), ('stripe', 'Stripe'), ('paypal', 'PayPal'), ('mailchimp', 'MailChimp'), ('slack', 'Slack'), ('zapier', 'Zapier')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('configuration', models.JSONField(default=dict)),
                ('credentials', models.JSONField(default=dict)),
                ('sync_settings', models.JSONField(default=dict)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'External Integration',
                'verbose_name_plural': 'External Integrations',
                'db_table': 'external_integrations',
            },
        ),
        migrations.CreateModel(
            name='WebhookEndpoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('events', models.JSONField(default=list, help_text='List of events to subscribe to')),
                ('is_active', models.BooleanField(default=True)),
                ('secret_key', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('max_retries', models.IntegerField(default=3)),
                ('retry_delay', models.IntegerField(default=60, help_text='Delay in seconds between retries')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Webhook Endpoint',
                'verbose_name_plural': 'Webhook Endpoints',
                'db_table': 'webhook_endpoints',
            },
        ),
        migrations.CreateModel(
            name='WebhookDelivery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(max_length=50)),
                ('payload', models.JSONField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('retrying', 'Retrying')], default='pending', max_length=20)),
                ('response_status', models.IntegerField(blank=True, null=True)),
                ('response_body', models.TextField(blank=True)),
                ('attempt_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('endpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='integrations.webhookendpoint')),
            ],
            options={
                'verbose_name': 'Webhook Delivery',
                'verbose_name_plural': 'Webhook Deliveries',
                'db_table': 'webhook_deliveries',
                'ordering': ['-created_at'],
            },
        ),
    ]
