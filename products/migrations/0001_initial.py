# Generated by Django 5.2 on 2025-08-31 13:28

import django.db.models.deletion
import simple_history.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Brand Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description for the brand",
                        verbose_name="Description",
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        help_text="Optional brand logo image",
                        upload_to="brand_logos/",
                        verbose_name="Logo",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Brand",
                "verbose_name_plural": "Brands",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Category Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description for the category",
                        verbose_name="Description",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalBrand",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=255, verbose_name="Brand Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description for the brand",
                        verbose_name="Description",
                    ),
                ),
                (
                    "logo",
                    models.TextField(
                        blank=True,
                        help_text="Optional brand logo image",
                        max_length=100,
                        verbose_name="Logo",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Brand",
                "verbose_name_plural": "historical Brands",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCategory",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=255, verbose_name="Category Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description for the category",
                        verbose_name="Description",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Category",
                "verbose_name_plural": "historical Categories",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalProduct",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Product Name")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed product description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        db_index=True,
                        help_text="Stock Keeping Unit - unique product identifier",
                        max_length=50,
                        verbose_name="SKU",
                    ),
                ),
                (
                    "barcode",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Optional barcode for product scanning",
                        max_length=100,
                        null=True,
                        verbose_name="Barcode",
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cost price of the product",
                        max_digits=10,
                        verbose_name="Cost Price",
                    ),
                ),
                (
                    "selling_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Selling price of the product",
                        max_digits=10,
                        verbose_name="Selling Price",
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Tax rate for the product as percentage",
                        max_digits=5,
                        verbose_name="Tax Rate (%)",
                    ),
                ),
                (
                    "unit_of_measurement",
                    models.CharField(
                        default="pieces",
                        help_text="Unit in which product is measured (e.g., pieces, kg, liters)",
                        max_length=50,
                        verbose_name="Unit of Measurement",
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(
                        default=0,
                        help_text="Current stock quantity",
                        verbose_name="Stock Quantity",
                    ),
                ),
                (
                    "low_stock_threshold",
                    models.IntegerField(
                        default=10,
                        help_text="Quantity below which low stock alerts are triggered",
                        verbose_name="Low Stock Threshold",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indicates if the product is active and available for sale",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Optional brand of the product",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="products.brand",
                        verbose_name="Brand",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Category of the product",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="products.category",
                        verbose_name="Category",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Product",
                "verbose_name_plural": "historical Products",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Product Name")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed product description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        db_index=True,
                        help_text="Stock Keeping Unit - unique product identifier",
                        max_length=50,
                        unique=True,
                        verbose_name="SKU",
                    ),
                ),
                (
                    "barcode",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Optional barcode for product scanning",
                        max_length=100,
                        null=True,
                        unique=True,
                        verbose_name="Barcode",
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cost price of the product",
                        max_digits=10,
                        verbose_name="Cost Price",
                    ),
                ),
                (
                    "selling_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Selling price of the product",
                        max_digits=10,
                        verbose_name="Selling Price",
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Tax rate for the product as percentage",
                        max_digits=5,
                        verbose_name="Tax Rate (%)",
                    ),
                ),
                (
                    "unit_of_measurement",
                    models.CharField(
                        default="pieces",
                        help_text="Unit in which product is measured (e.g., pieces, kg, liters)",
                        max_length=50,
                        verbose_name="Unit of Measurement",
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(
                        default=0,
                        help_text="Current stock quantity",
                        verbose_name="Stock Quantity",
                    ),
                ),
                (
                    "low_stock_threshold",
                    models.IntegerField(
                        default=10,
                        help_text="Quantity below which low stock alerts are triggered",
                        verbose_name="Low Stock Threshold",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indicates if the product is active and available for sale",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional brand of the product",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="products.brand",
                        verbose_name="Brand",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Category of the product",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="products.category",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalProductVariant",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the variant option (e.g., Size, Color)",
                        max_length=255,
                        verbose_name="Variant Option Name",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        help_text="Value of the variant option (e.g., Large, Red)",
                        max_length=255,
                        verbose_name="Variant Value",
                    ),
                ),
                (
                    "additional_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Additional price for this variant (can be positive or negative)",
                        max_digits=10,
                        verbose_name="Additional Price",
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(
                        default=0,
                        help_text="Stock quantity specific to this variant",
                        verbose_name="Variant Stock Quantity",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Parent product",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Product Variant",
                "verbose_name_plural": "historical Product Variants",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalProductImage",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "image",
                    models.TextField(
                        help_text="Product image file",
                        max_length=100,
                        verbose_name="Image",
                    ),
                ),
                (
                    "is_thumbnail",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if this image is the thumbnail for the product",
                        verbose_name="Is Thumbnail",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Related product",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Product Image",
                "verbose_name_plural": "historical Product Images",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="Product image file",
                        upload_to="product_images/",
                        verbose_name="Image",
                    ),
                ),
                (
                    "is_thumbnail",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if this image is the thumbnail for the product",
                        verbose_name="Is Thumbnail",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        help_text="Related product",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Image",
                "verbose_name_plural": "Product Images",
            },
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the variant option (e.g., Size, Color)",
                        max_length=255,
                        verbose_name="Variant Option Name",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        help_text="Value of the variant option (e.g., Large, Red)",
                        max_length=255,
                        verbose_name="Variant Value",
                    ),
                ),
                (
                    "additional_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Additional price for this variant (can be positive or negative)",
                        max_digits=10,
                        verbose_name="Additional Price",
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(
                        default=0,
                        help_text="Stock quantity specific to this variant",
                        verbose_name="Variant Stock Quantity",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        help_text="Parent product",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Variant",
                "verbose_name_plural": "Product Variants",
                "ordering": ["name", "value"],
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category", "selling_price"], name="category_price_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productvariant",
            unique_together={("product", "name", "value")},
        ),
    ]
