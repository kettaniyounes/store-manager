# Generated by Django 5.2 on 2025-09-02 17:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0001_initial"),
        ("settings_app", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="historicalproduct",
            name="default_store",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Default store location for this product",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="settings_app.store",
                verbose_name="Default Store",
            ),
        ),
        migrations.AddField(
            model_name="historicalproduct",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalproductexpiration",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalproductexpiration",
            name="store",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Store location where this batch is located",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="settings_app.store",
                verbose_name="Store Location",
            ),
        ),
        migrations.AddField(
            model_name="historicalproductimage",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalproductvariant",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalstockadjustment",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalstockadjustment",
            name="store",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Store location where this adjustment occurred",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="settings_app.store",
                verbose_name="Store Location",
            ),
        ),
        migrations.AddField(
            model_name="historicalstockadjustment",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Adjusted By",
            ),
        ),
        migrations.AddField(
            model_name="historicalstockmovement",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalstockmovement",
            name="store",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Store location where this movement occurred",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="settings_app.store",
                verbose_name="Store Location",
            ),
        ),
        migrations.AddField(
            model_name="historicalstockmovement",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="User who performed this stock movement",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="brand",
            field=models.ForeignKey(
                blank=True,
                help_text="Optional brand of the product",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="products",
                to="products.brand",
                verbose_name="Brand",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                help_text="Category of the product",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="products.category",
                verbose_name="Category",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="default_store",
            field=models.ForeignKey(
                help_text="Default store location for this product",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="default_products",
                to="settings_app.store",
                verbose_name="Default Store",
            ),
        ),
        migrations.AddField(
            model_name="historicalstockmovement",
            name="product",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="products.product",
                verbose_name="Product",
            ),
        ),
        migrations.AddField(
            model_name="historicalstockadjustment",
            name="product",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="products.product",
                verbose_name="Product",
            ),
        ),
        migrations.AddField(
            model_name="historicalproductvariant",
            name="product",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Parent product",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="products.product",
                verbose_name="Product",
            ),
        ),
        migrations.AddField(
            model_name="historicalproductimage",
            name="product",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Related product",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="products.product",
                verbose_name="Product",
            ),
        ),
        migrations.AddField(
            model_name="historicalproductexpiration",
            name="product",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="products.product",
                verbose_name="Product",
            ),
        ),
        migrations.AddField(
            model_name="productexpiration",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="expiration_records",
                to="products.product",
                verbose_name="Product",
            ),
        ),
        migrations.AddField(
            model_name="productexpiration",
            name="store",
            field=models.ForeignKey(
                help_text="Store location where this batch is located",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_expirations",
                to="settings_app.store",
                verbose_name="Store Location",
            ),
        ),
        migrations.AddField(
            model_name="productimage",
            name="product",
            field=models.ForeignKey(
                help_text="Related product",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="images",
                to="products.product",
                verbose_name="Product",
            ),
        ),
        migrations.AddField(
            model_name="productvariant",
            name="product",
            field=models.ForeignKey(
                help_text="Parent product",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="variants",
                to="products.product",
                verbose_name="Product",
            ),
        ),
        migrations.AddField(
            model_name="productexpiration",
            name="product_variant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="expiration_records",
                to="products.productvariant",
                verbose_name="Product Variant",
            ),
        ),
        migrations.AddField(
            model_name="historicalstockmovement",
            name="product_variant",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="products.productvariant",
                verbose_name="Product Variant",
            ),
        ),
        migrations.AddField(
            model_name="historicalstockadjustment",
            name="product_variant",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="products.productvariant",
                verbose_name="Product Variant",
            ),
        ),
        migrations.AddField(
            model_name="historicalproductexpiration",
            name="product_variant",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="products.productvariant",
                verbose_name="Product Variant",
            ),
        ),
        migrations.AddField(
            model_name="stockadjustment",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stock_adjustments",
                to="products.product",
                verbose_name="Product",
            ),
        ),
        migrations.AddField(
            model_name="stockadjustment",
            name="product_variant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stock_adjustments",
                to="products.productvariant",
                verbose_name="Product Variant",
            ),
        ),
        migrations.AddField(
            model_name="stockadjustment",
            name="store",
            field=models.ForeignKey(
                help_text="Store location where this adjustment occurred",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stock_adjustments",
                to="settings_app.store",
                verbose_name="Store Location",
            ),
        ),
        migrations.AddField(
            model_name="stockadjustment",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Adjusted By",
            ),
        ),
        migrations.AddField(
            model_name="stockmovement",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stock_movements",
                to="products.product",
                verbose_name="Product",
            ),
        ),
        migrations.AddField(
            model_name="stockmovement",
            name="product_variant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stock_movements",
                to="products.productvariant",
                verbose_name="Product Variant",
            ),
        ),
        migrations.AddField(
            model_name="stockmovement",
            name="store",
            field=models.ForeignKey(
                help_text="Store location where this movement occurred",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stock_movements",
                to="settings_app.store",
                verbose_name="Store Location",
            ),
        ),
        migrations.AddField(
            model_name="stockmovement",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="User who performed this stock movement",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category", "selling_price"], name="category_price_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["stock_quantity", "reorder_point"], name="stock_reorder_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_perishable", "shelf_life_days"], name="perishable_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["default_store", "is_active"], name="store_active_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["sku"], name="product_sku_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["barcode"], name="product_barcode_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["is_active"], name="product_active_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="product",
            unique_together={("barcode",), ("sku",)},
        ),
        migrations.AlterUniqueTogether(
            name="productvariant",
            unique_together={("product", "name", "value")},
        ),
        migrations.AddIndex(
            model_name="productexpiration",
            index=models.Index(
                fields=["expiration_date", "is_expired"], name="expiration_status_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productexpiration",
            index=models.Index(
                fields=["product", "expiration_date"], name="product_expiration_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productexpiration",
            index=models.Index(
                fields=["store", "expiration_date"], name="store_expiration_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productexpiration",
            index=models.Index(
                fields=["store", "is_expired"], name="store_expired_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productexpiration",
            index=models.Index(fields=["expiration_date"], name="expiration_date_idx"),
        ),
        migrations.AddIndex(
            model_name="stockadjustment",
            index=models.Index(
                fields=["store", "adjustment_date"], name="store_adjustment_date_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stockadjustment",
            index=models.Index(
                fields=["store", "product"], name="store_product_adj_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stockadjustment",
            index=models.Index(fields=["adjustment_date"], name="adjustment_date_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="stockadjustment",
            unique_together={("adjustment_id",)},
        ),
        migrations.AddIndex(
            model_name="stockmovement",
            index=models.Index(
                fields=["product", "movement_date"], name="product_movement_date_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stockmovement",
            index=models.Index(
                fields=["movement_type", "movement_date"], name="movement_type_date_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stockmovement",
            index=models.Index(
                fields=["store", "movement_date"], name="store_movement_date_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stockmovement",
            index=models.Index(fields=["store", "product"], name="store_product_idx"),
        ),
        migrations.AddIndex(
            model_name="stockmovement",
            index=models.Index(fields=["movement_date"], name="movement_date_idx"),
        ),
        migrations.AddIndex(
            model_name="stockmovement",
            index=models.Index(fields=["product"], name="product_movement_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="stockmovement",
            unique_together={("movement_id",)},
        ),
    ]
